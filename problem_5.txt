This algorithm implements Autocomplete using a Trie data structure. The Trie
data structure is a tree with each node consisting of one letter as data and 
pointer to the next node. It uses Finite Deterministic automation which means
that it uses state to state transition.

TrieNode: Insert a character: 
Time complexity
constant O(1)
because has a running time independent of the input size

Space complexity
constant O(1)
because the algorithm maintains the same total size of new variables allocated to memory during
runtime, regardless of input size.

Suffixes of a node: 
Time complexity
quadratic O(m*h)
m is maximum number of elements in one level
h is the height

Space complexity
quadratic O(m*h)
m is maximum number of elements in one level
h is the height.

Trie: Inserting and searching : 
Time complexity
linear O(n)
n is the length of the word.
Space complexity
linear O(n)
n is the length of the word.
